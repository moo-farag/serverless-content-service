package com.service.content.platform.repository;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerated;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerator;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.util.UUID;

/**
 * Custom annotation that will be used to add a prefix to UUIDs.
 *
 * Important note while using spring web mvc, path variables will have
 * issues with dot separated prefixes (spring truncated it if appeared in the last pr request path),
 * solution would be adding a regex to path variable
 * at the request mapping over the controller method or avoid dots in path variables.
 *
 * <p>Example,</p>
 * <pre class="brush: java">
 *     @GetMapping(path = "/contents/{id:.+}")
 *     public ResponseEntity<Content> getContentById(@PathVariable(name = "id") String id) {
 *     ...
 *     }
 * </pre>
 *
 */
@DynamoDBAutoGenerated(generator = PrefixedUUIDGeneratedKey.Generator.class)
@Retention(RetentionPolicy.RUNTIME)
@Target({ElementType.METHOD})
public @interface PrefixedUUIDGeneratedKey {
    String prefix() default "";

    class Generator implements DynamoDBAutoGenerator<String> {
        private final String prefix;

        public Generator(final Class<String> targetType, final PrefixedUUIDGeneratedKey annotation) {
            this.prefix = annotation.prefix();
        }

        public Generator() { //<- required if annotating directly
            this.prefix = "";
        }

        @Override
        public DynamoDBAutoGenerateStrategy getGenerateStrategy() {
            return DynamoDBAutoGenerateStrategy.CREATE;
        }

        @Override
        public final String generate(final String currentValue) {
            return prefix + UUID.randomUUID().toString();
        }
    }
}